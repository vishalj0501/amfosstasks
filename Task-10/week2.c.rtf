{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include <cs50.h>\
#include <stdio.h>\
#include <stdlib.h>\
#include <string.h>\
#include <ctype.h>\
#include <math.h>\
\
\
int main(int argc, string argv[])\
\{\
    if (argc != 2)                      // getting a valid key at command line\
    \{\
        printf("Usage: ./caesar key\\n");\
        return 1;                       // stopprogrammusingreturn1wheninputinvalid\
    \}\
\
    int k = atoi(argv[1]);                // key obtained\
\
    if (k < 0 || k > 1000)\
    \{\
        printf("Usage: ./caesar key\\n");\
        return 1;\
    \}\
\
    for (int j = 0; j < strlen(argv[1]); j++)\
    \{\
\
        if (argv[1][j] > 57 || argv[1][j] < 48)\
        \{\
            printf("Usage: ./caesar key\\n");\
            return 1;\
        \}\
    \}\
\
    string p = get_string("plaintext: ");\
\
    char c[strlen(p)];                           // ciphertext\
\
    printf("ciphertext: ");\
\
    for (int i = 0, n = strlen(p); i < n; i++)\
    \{\
\
        if (isupper(p[i]))\
        \{\
            p[i] = p[i] - 65;                // converting to alphabetical index\
            c[i] = (p[i] + k) % 26 + 65;\
            printf("%c", c[i]);\
        \}\
\
        else if (islower(p[i]))\
        \{\
            p[i] = p[i] - 97;                // converting to alphabetical index\
            c[i] = (p[i] + k) % 26 + 97;\
            printf("%c", c[i]);\
        \}\
\
        else\
        \{\
            c[i] = p[i];\
            printf("%c", c[i]);\
        \}\
    \}\
\
    printf("\\n");\
\
\}}